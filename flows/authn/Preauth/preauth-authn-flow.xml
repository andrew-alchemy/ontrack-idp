<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
      parent="authn.abstract">

    <!-- 
    	NB. NO view states in this flow
    	This is basically a pre-authenticated flow 
    	This action state simply takes the current authenticated user and tells the IDP to use that principal as the basis for issuing a SAML Authentication
    	In our case the beauty is that the current authentication was derived form OAuth and so hey presto we get an OAuth to SAML conversion
    	The trick is to just setPrincipalName on an ExternalAuthentication subcontext  
     -->
  
  	<!-- add the ExternalAuthenticationContext -->
	<on-start>
		<evaluate 
			expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true)"
			result="flowScope.extContext" />
		<evaluate expression="externalContext.getRequestMap().get('ONTRACK_SUBJECT')" result="flowScope.subject"/>
	</on-start>
  
  	<!--  here is the work  -->
    <action-state id="ValidatePreauthAuthentication">
    	<!-- if we are already authenticated then use the name as the Principal for SAML otherwise set the NoCredentials error  -->
		<!-- <evaluate expression="currentUser == null ? flowScope.extContext.setAuthnError( 'NoCredentials' ) : flowScope.extContext.setPrincipalName( currentUser.name )" />  -->
		<evaluate expression="flowScope.subject == null ? flowScope.extContext.setAuthnError( 'NoCredentials' ) : flowScope.extContext.setSubject( flowScope.subject )" />
        <evaluate expression="ValidatePreauthAuthentication" />
        <evaluate expression="PopulateSubjectCanonicalizationContext" />
        <evaluate expression="'proceed'" />

        <transition on="proceed" to="CallSubjectCanonicalization" />
    </action-state>

    <!-- This runs a c14n step on the result of the authentication. -->
    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
        <input name="calledAsSubflow" value="true" />
        <transition on="proceed" to="proceed" />
        
        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
    </subflow-state>

    <bean-import resource="preauth-authn-beans.xml" />

</flow>
